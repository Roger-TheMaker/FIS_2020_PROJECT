package Interface;

import Encryption.MD5;
import SQLite.CreateTable;
import SQLite.Insert;
import SQLite.Select;

import javax.swing.*;
import javax.swing.border.TitledBorder;
import java.awt.*;
import java.awt.event.*;

public class RegistrationPage extends JDialog {
    private JPanel contentPane;
    private JTextField FirstNameTextField;
    private JTextField UsernameTextField;
    private JTextField LastNameTextField;
    private JTextField EmailTextField;
    private JPasswordField PassowordTextField;
    private JPasswordField PasswordConfirmationTextField;
    private JButton RegisterButton;
    private JPanel jpanel;
    private JButton buttonOK;
    private JButton buttonCancel;


    public RegistrationPage() {
        setContentPane(contentPane);
        setModal(true);
        getRootPane().setDefaultButton(buttonOK);
        FirstNameTextField.setText("First Name");
        LastNameTextField.setText("Last Name");
        EmailTextField.setText("Email");
        UsernameTextField.setText("Username");
        PassowordTextField.setText("password");
        PasswordConfirmationTextField.setText("password");


        // call onCancel() when cross is clicked
        setDefaultCloseOperation(DO_NOTHING_ON_CLOSE);
        addWindowListener(new WindowAdapter() {
            public void windowClosing(WindowEvent e) {
                onCancel();
            }
        });

        // call onCancel() on ESCAPE
        contentPane.registerKeyboardAction(new ActionListener() {
            public void actionPerformed(ActionEvent e) {
                onCancel();
            }
        }, KeyStroke.getKeyStroke(KeyEvent.VK_ESCAPE, 0), JComponent.WHEN_ANCESTOR_OF_FOCUSED_COMPONENT);

        RegisterButton.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent e) {
                //variables are for checking if the email/username already exists
                //the SQL statement will return "1" the e/u already exists
                String checkgetEmail = "1";
                String checkgetUsername = "1";

                String username = UsernameTextField.getText();
                String email = EmailTextField.getText();
                String firstname = FirstNameTextField.getText();
                String lastname = LastNameTextField.getText();
                char[] password = PassowordTextField.getPassword();
                String password_hash = MD5.getMd5(String.valueOf(password));

                String tableContent = "id integer PRIMARY KEY, FirstName text NOT NULL, LastName text NOT NULL, " +
                        "Email text NOT NULL, Username text NOT NULL, Password text NOT NULL ";
                CreateTable.CreateTable("test.db", "REGISTRATION", tableContent);


                String sql_check_username = "SELECT * FROM REGISTRATION WHERE Username = " + "\'" + username + "\'";
                String sql_check_email = "SELECT * FROM REGISTRATION WHERE Email = " + "\'" + email + "\'";

                //update the values for existance checking
                checkgetEmail = Select.CheckEntry("test.db", sql_check_email);
                checkgetUsername = Select.CheckEntry("test.db", sql_check_username);


                String parameterList = "FirstName, LastName, Email, Username, Password";

                String valueList = "\'" + firstname + "\'" + ", " + "\'" + lastname + "\'" + ", " + "\'" + email + "\'" + ", " +
                        "\'" + username + "\'" + ", " + "\'" + password_hash + "\'";
                ;

                System.out.println(valueList);
                System.out.println(checkgetEmail);

                if (checkgetEmail.equals("0") || checkgetUsername.equals("0")) {
                    Insert.Insert("test.db", "REGISTRATION", parameterList, valueList);
                    FirstNameTextField.setText("ACCOUNT CREATED");
                } else {
                    if (checkgetEmail.equals("1") && checkgetUsername.equals("1")) {
                        EmailTextField.setText("Email already exist");
                        UsernameTextField.setText("Username already exists");
                    } else if (checkgetEmail.equals("1")) {
                        EmailTextField.setText("Email already exists");
                    } else if (checkgetUsername.equals("1")) {
                        UsernameTextField.setText("Username already exists");
                    }
                }
            }
        });
    }

    private void onOK() {
        // add your code here
        dispose();
    }

    private void onCancel() {

        dispose();

    }

    public void Registration() {
        RegistrationPage dialog = new RegistrationPage();
        dialog.pack();
        dialog.setTitle("Register Form");
        dialog.setSize(230, 300);
        dialog.setVisible(true);
    }

    {
// GUI initializer generated by IntelliJ IDEA GUI Designer
// >>> IMPORTANT!! <<<
// DO NOT EDIT OR ADD ANY CODE HERE!
        $$$setupUI$$$();
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        contentPane = new JPanel();
        contentPane.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(1, 1, new Insets(10, 10, 10, 10), -1, -1));
        contentPane.setEnabled(false);
        contentPane.setBorder(BorderFactory.createTitledBorder(BorderFactory.createRaisedBevelBorder(), null, TitledBorder.CENTER, TitledBorder.DEFAULT_POSITION, this.$$$getFont$$$(null, -1, -1, contentPane.getFont()), new Color(-16777216)));
        jpanel = new JPanel();
        jpanel.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(7, 1, new Insets(0, 0, 0, 0), -1, -1));
        contentPane.add(jpanel, new com.intellij.uiDesigner.core.GridConstraints(0, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, null, null, null, 0, false));
        FirstNameTextField = new JTextField();
        FirstNameTextField.setText("");
        jpanel.add(FirstNameTextField, new com.intellij.uiDesigner.core.GridConstraints(0, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_WEST, com.intellij.uiDesigner.core.GridConstraints.FILL_HORIZONTAL, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_WANT_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, new Dimension(150, -1), null, 0, false));
        UsernameTextField = new JTextField();
        jpanel.add(UsernameTextField, new com.intellij.uiDesigner.core.GridConstraints(3, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_WEST, com.intellij.uiDesigner.core.GridConstraints.FILL_HORIZONTAL, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_WANT_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, new Dimension(150, -1), null, 0, false));
        LastNameTextField = new JTextField();
        jpanel.add(LastNameTextField, new com.intellij.uiDesigner.core.GridConstraints(1, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_WEST, com.intellij.uiDesigner.core.GridConstraints.FILL_HORIZONTAL, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_WANT_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, new Dimension(150, -1), null, 0, false));
        EmailTextField = new JTextField();
        jpanel.add(EmailTextField, new com.intellij.uiDesigner.core.GridConstraints(2, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_WEST, com.intellij.uiDesigner.core.GridConstraints.FILL_HORIZONTAL, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_WANT_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, new Dimension(150, -1), null, 0, false));
        PassowordTextField = new JPasswordField();
        jpanel.add(PassowordTextField, new com.intellij.uiDesigner.core.GridConstraints(4, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_WEST, com.intellij.uiDesigner.core.GridConstraints.FILL_HORIZONTAL, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_WANT_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, new Dimension(150, -1), null, 0, false));
        PasswordConfirmationTextField = new JPasswordField();
        PasswordConfirmationTextField.setText("");
        jpanel.add(PasswordConfirmationTextField, new com.intellij.uiDesigner.core.GridConstraints(5, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_WEST, com.intellij.uiDesigner.core.GridConstraints.FILL_HORIZONTAL, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_WANT_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, new Dimension(150, -1), null, 0, false));
        RegisterButton = new JButton();
        RegisterButton.setText("Register");
        jpanel.add(RegisterButton, new com.intellij.uiDesigner.core.GridConstraints(6, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_HORIZONTAL, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
    }

    /**
     * @noinspection ALL
     */
    private Font $$$getFont$$$(String fontName, int style, int size, Font currentFont) {
        if (currentFont == null) return null;
        String resultName;
        if (fontName == null) {
            resultName = currentFont.getName();
        } else {
            Font testFont = new Font(fontName, Font.PLAIN, 10);
            if (testFont.canDisplay('a') && testFont.canDisplay('1')) {
                resultName = fontName;
            } else {
                resultName = currentFont.getName();
            }
        }
        return new Font(resultName, style >= 0 ? style : currentFont.getStyle(), size >= 0 ? size : currentFont.getSize());
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {
        return contentPane;
    }
}

package Interface;

import Network.Client;
import Network.Generic;
import Network.Server;

import javax.swing.*;
import java.awt.*;
import java.awt.event.*;

public class ChatInterface extends JDialog {
    private JPanel contentPane;
    private JButton SendButton;
    private JCheckBox SetSolvedCheckBox;
    private JTextField MessageTextField;
    private JTextArea ChatBox;
    private JButton buttonOK;
    private JButton buttonCancel;

    public <T extends Generic> ChatInterface(final T ConnectionOption) {
        setContentPane(contentPane);
        setModal(true);
        getRootPane().setDefaultButton(buttonOK);

        Thread thread = new Thread(new Runnable() {
            public void run() {
                String message = ConnectionOption.receiveMessage();
                while (!message.equals("")) {
                    ChatBox.append(message);
                    message = ConnectionOption.receiveMessage();
                }
            }
        });
        thread.start();

        // call onCancel() on ESCAPE
        contentPane.registerKeyboardAction(new ActionListener() {
            public void actionPerformed(ActionEvent e) {
                ConnectionOption.sendMessage("NAME has left the chat");
                ConnectionOption.closeConnection();


                onCancel();
            }
        }, KeyStroke.getKeyStroke(KeyEvent.VK_ESCAPE, 0), JComponent.WHEN_ANCESTOR_OF_FOCUSED_COMPONENT);

        SendButton.addActionListener(new ActionListener() {

            public void actionPerformed(ActionEvent e) {
                String message = MessageTextField.getText();
                ChatBox.append(message + "\n");
                ConnectionOption.sendMessage(message);
                MessageTextField.setText("");
            }
        });

        this.addWindowListener(new WindowAdapter() {
            public void windowClosing(WindowEvent e) {
                ConnectionOption.sendMessage("NAME has left the chat");
                ConnectionOption.closeConnection();
            }

        });

    }

    private void onOK() {
        // add your code here
        dispose();
    }

    private void onCancel() {
        dispose();
    }

    public static <T extends Generic> void ChatBox(T ConnectionOption) {
        ChatInterface dialog = new ChatInterface(ConnectionOption);
        dialog.pack();
        dialog.setVisible(true);
    }

    {
// GUI initializer generated by IntelliJ IDEA GUI Designer
// >>> IMPORTANT!! <<<
// DO NOT EDIT OR ADD ANY CODE HERE!
        $$$setupUI$$$();
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        contentPane = new JPanel();
        contentPane.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(4, 3, new Insets(10, 10, 10, 10), -1, -1));
        ChatBox = new JTextArea();
        contentPane.add(ChatBox, new com.intellij.uiDesigner.core.GridConstraints(0, 1, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_WANT_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_WANT_GROW, null, new Dimension(150, 50), null, 0, false));
        SetSolvedCheckBox = new JCheckBox();
        SetSolvedCheckBox.setText("Solved");
        contentPane.add(SetSolvedCheckBox, new com.intellij.uiDesigner.core.GridConstraints(1, 0, 3, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_WEST, com.intellij.uiDesigner.core.GridConstraints.FILL_NONE, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        SendButton = new JButton();
        SendButton.setText("Send");
        contentPane.add(SendButton, new com.intellij.uiDesigner.core.GridConstraints(1, 2, 3, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_HORIZONTAL, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        MessageTextField = new JTextField();
        contentPane.add(MessageTextField, new com.intellij.uiDesigner.core.GridConstraints(2, 1, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_WEST, com.intellij.uiDesigner.core.GridConstraints.FILL_HORIZONTAL, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_WANT_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, new Dimension(150, -1), null, 0, false));
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {
        return contentPane;
    }
}
